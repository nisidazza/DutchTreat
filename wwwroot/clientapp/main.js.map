{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/shared/dataService.ts","./ClientApp/app/shop/productList.component.ts","./ClientApp/app/shop/productList.component.html","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\n\nexport class AppComponent {\n  title = 'Product List';\n}\n","<div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n        <h3>{{title}}</h3>\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <div class=\"card bg-light p-2\" >\r\n            <h3>Cart</h3>\r\n        </div>\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ProductList } from './shop/productList.component';\nimport { DataService } from './shared/dataService';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ProductList\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule\n    ],\n    providers: [\n        DataService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product } from './product';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public products: Product[] = [];\r\n\r\n    //call the API \r\n    //Observable specify what return type loadProducts is\r\n    loadProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/products\")\r\n            //inside the pipe there will be a list of interceptors\r\n            .pipe(\r\n                map((data: any[]) => {\r\n                    this.products = data;\r\n                    return true;\r\n                })\r\n            )\r\n\r\n    }\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Product } from '../shared/product';\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [\"productList.component.css\"]\r\n})\r\nexport class ProductList implements OnInit {\r\n/** inject DataService **/\r\n    // // Called first time before the ngOnInit()\r\n    constructor(private data: DataService) {\r\n    }\r\n\r\n    //add type safety to the products list\r\n    public products : Product[] = [];\r\n\r\n     // Called after the constructor and called  after the first ngOnChanges() \r\n    ngOnInit(): void {\r\n        this.data.loadProducts()\r\n            //get the data passed back in from the API\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.data.products;\r\n                }\r\n            });\r\n    }\r\n}","<div class=\"row\">\r\n    <div class=\"product-info col-md-4 well well-sm\" *ngFor=\"let p of products\">\r\n        <div class=\"card bg-light p-1 m-1\">\r\n            <img src=\"/img/{{p.artId}}.jpg\" class=\"img-fluid\" [alt]=\"p.title\" />\r\n            <div class=\"product-name\">{{p.category}} - {{p.size}}</div>\r\n            <ul class=\"product-props\">\r\n                <li><strong>Price</strong>: {{p.price | currency: \"NZD\":true}}</li>\r\n                <li><strong>Artist</strong>: {{p.artist}}</li>\r\n                <li><strong>Title</strong>: {{p.title}}</li>\r\n                <li><strong>Description</strong>:{{p.artDescription}}</li>\r\n            </ul>\r\n            <button id=\"buyButton\" class=\"btn btn-success\">Buy</button>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}